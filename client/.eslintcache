[{"/home/hieu/GoLang/Go-React-Web-App/client/src/App.js":"1","/home/hieu/GoLang/Go-React-Web-App/client/src/socket.js":"2","/home/hieu/GoLang/Go-React-Web-App/client/src/index.js":"3","/home/hieu/GoLang/Go-React-Web-App/client/src/reportWebVitals.js":"4","/home/hieu/GoLang/Go-React-Web-App/client/src/api/mails.js":"5"},{"size":4168,"mtime":1609296804898,"results":"6","hashOfConfig":"7"},{"size":608,"mtime":1608890298214,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1608620260392,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1608620260392,"results":"10","hashOfConfig":"7"},{"size":325,"mtime":1609295693665,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"12g74yp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hieu/GoLang/Go-React-Web-App/client/src/App.js",["23"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport \"./App.css\";\nimport sendMailApi from \"./api/mails\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"30%\",\n    \"& > * + *\": {\n      marginTop: 10,\n    },\n    padding: 30,\n  },\n}));\nvar socket = new WebSocket(\"ws://localhost:8080/ws\");\nexport default function App() {\n  const [email, setEmail] = useState(\"\");\n  const [receiver, setReceiver] = useState([\"\"]);\n  const [loading, setLoading] = useState(false);\n  const [emailList, setEmailList] = useState([]);\n  const [mess, setMess] = useState([]);\n  console.log(\"sent:\", receiver);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(\"Attempting Connection...\");\n    socket.onopen = () => {\n      console.log(\"Successfully Connected\");\n    };\n    socket.onmessage = (msg) => {\n      console.log(\"on message: \", msg.data);\n      let data = JSON.parse(msg.data);\n      setMess(data);\n    };\n    socket.onerror = (error) => {\n      console.log(\"Socket Error: \", error);\n    };\n    return () =>\n      (socket.onclose = (event) => {\n        console.log(\"Socket Closed Connection: \", event);\n      });\n  }, []);\n\n  useEffect(() => {\n    let listClone = [...emailList];\n    for (let i = 0; i < listClone.length; i++) {\n      if (listClone[i].id.trim() === mess[i].id.trim()) {\n        let changeItem = {\n          ...listClone[i],\n          status: \"done\",\n        };\n        listClone[i] = changeItem;\n      }\n      setEmailList(listClone);\n    }\n  }, [mess]);\n\n  const sendMailToUsers = async () => {\n    try {\n      setEmailList([]);\n      setLoading(true);\n      const fetchEmailList = async () => {\n        const res = await sendMailApi.sendMail(email, receiver);\n        setEmailList(res);\n        setLoading(false);\n      };\n      fetchEmailList();\n    } catch (e) {\n      setLoading(false);\n      console.log(e);\n    }\n  };\n  const onChangeText = (e, i) => {\n    const receiversValues = [...receiver];\n    receiversValues[i] = e.target.value;\n    setReceiver(receiversValues);\n  };\n  const onFieldAdded = () => {\n    const inputField = [...receiver];\n    inputField.push(\"\");\n    setReceiver(inputField);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"from--area\">\n        <h1>Send Email</h1>\n        <p>\n          <label>From: </label>\n        </p>\n\n        <input\n          style={{ padding: 10 }}\n          onChange={(e) => setEmail(e.target.value)}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Enter email...\"\n        />\n        <Button\n          style={{ marginTop: 20 }}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={sendMailToUsers}\n          disabled={loading}\n        >\n          Send mail\n        </Button>\n        <Fab\n          className=\"fab-button\"\n          color=\"primary\"\n          aria-label=\"add\"\n          onClick={onFieldAdded}\n        >\n          <AddIcon />\n        </Fab>\n        {loading && (\n          <div className={classes.root}>\n            <LinearProgress color=\"secondary\" />\n          </div>\n        )}\n        <div className=\"email-list-container\">\n          {emailList.length > 0 &&\n            emailList.map((e, i) => (\n              <p\n                key={i}\n                style={{ color: e.status === \"done\" ? \"green\" : \"red\" }}\n              >\n                Email: {e.email} - Status: {e.status}\n              </p>\n            ))}\n        </div>\n      </div>\n      <div className=\"to--area\">\n        <p>\n          <label>To: </label>\n        </p>\n        {receiver.map((input, i) => (\n          <input\n            key={i}\n            disabled={loading}\n            style={{ padding: 10, margin: \"10px 0\" }}\n            onChange={(e) => onChangeText(e, i)}\n            type=\"email\"\n            name={i}\n            value={receiver[i]}\n            placeholder=\"Enter receiver...\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","/home/hieu/GoLang/Go-React-Web-App/client/src/socket.js",[],"/home/hieu/GoLang/Go-React-Web-App/client/src/index.js",[],"/home/hieu/GoLang/Go-React-Web-App/client/src/reportWebVitals.js",[],"/home/hieu/GoLang/Go-React-Web-App/client/src/api/mails.js",["24"],{"ruleId":"25","severity":1,"message":"26","line":61,"column":6,"nodeType":"27","endLine":61,"endColumn":12,"suggestions":"28"},{"ruleId":"29","severity":1,"message":"30","line":15,"column":1,"nodeType":"31","endLine":17,"endColumn":3},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'emailList'. Either include it or remove the dependency array.","ArrayExpression",["32"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"33","fix":"34"},"Update the dependencies array to be: [emailList, mess]",{"range":"35","text":"36"},[1741,1747],"[emailList, mess]"]